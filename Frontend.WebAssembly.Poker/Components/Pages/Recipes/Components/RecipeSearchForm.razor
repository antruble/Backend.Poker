@using Microsoft.AspNetCore.Components.Forms

<div class="card p-4 mb-4 w-100 h-100">
    <div class="form-group">
        <label for="recipeDescription">Recept elképzelés / leírás</label>
        <textarea id="recipeDescription"
                  class="form-control"
                  rows="3"
                  placeholder="Írd le, milyen ételhez szeretnél receptet..."
                  @bind="Description"></textarea>
    </div>

    <div class="form-group mt-3">
        <label for="ingredientInput">Hozzávalók, amik a birtokodban vannak</label>
        <div class="input-group">
            <input id="ingredientInput"
                   type="text"
                   class="form-control"
                   placeholder="pl. csirke, brokkoli..."
                   @bind="NewIngredient" />
            <button class="btn btn-outline-secondary"
                    type="button"
                    @onclick="AddIngredient">
                Hozzáadás
            </button>
        </div>
    </div>

    @if (Ingredients.Any())
    {
        <div class="mt-3">
            <h6>Hozzávalók listája:</h6>
            <ul class="list-group">
                @foreach (var ingr in Ingredients)
                {
                    <li class="list-group-item d-flex justify-content-between align-items-center">
                        @ingr
                        <button class="btn btn-sm btn-danger"
                                @onclick="() => RemoveIngredient(ingr)">
                            Törlés
                        </button>
                    </li>
                }
            </ul>
        </div>
    }

    <button class="btn btn-primary mt-4"
            @onclick="OnSearch">
        Kérem a recepteket
    </button>
</div>

@code {
    [Parameter] public string Description { get; set; } = "";
    [Parameter] public EventCallback<string> DescriptionChanged { get; set; }

    [Parameter] public List<string> Ingredients { get; set; } = new();
    [Parameter] public EventCallback<List<string>> IngredientsChanged { get; set; }

    private string NewIngredient { get; set; } = "";

    [Parameter] public EventCallback OnSearchClicked { get; set; }

    private async Task AddIngredient()
    {
        if (!string.IsNullOrWhiteSpace(NewIngredient))
        {
            Ingredients.Add(NewIngredient.Trim());
            NewIngredient = "";
            await IngredientsChanged.InvokeAsync(Ingredients);
        }
    }

    private async Task RemoveIngredient(string ingr)
    {
        Ingredients.Remove(ingr);
        await IngredientsChanged.InvokeAsync(Ingredients);
    }

    private async Task OnSearch()
    {
        await DescriptionChanged.InvokeAsync(Description);
        await OnSearchClicked.InvokeAsync();
    }
}
